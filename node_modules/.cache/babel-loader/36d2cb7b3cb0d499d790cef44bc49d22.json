{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\SaroFirstReact\\\\src\\\\Components\\\\main\\\\formComponent\\\\CustomSelect\\\\CustSelectBox.js\";\nimport React from 'react';\n\nconst CustSelectBox = props => {\n  const List = props.AllSelectVal;\n\n  function DropDown(e) {\n    e.currentTarget.classList.toggle(\"active\");\n    e.currentTarget.nextSibling.classList.toggle(\"select-hide\");\n  }\n\n  function SelectDiv(e) {\n    let l = e.currentTarget.textContent;\n    e.currentTarget.parentNode.previousElementSibling.innerHTML = l;\n    e.currentTarget.parentNode.previousElementSibling.classList.toggle(\"active\");\n    e.currentTarget.parentNode.classList.toggle(\"select-hide\");\n    props.handleChange({\n      target: {\n        name: props.nameSel,\n        value: l\n      }\n    });\n  }\n\n  if (props.SelectedNone == 1) {\n    document.getElementById(props.nameSel).innerHTML = List[0];\n  }\n\n  let otherFormatInfo;\n  let SubTitle;\n\n  if (props.otherFormat !== null) {\n    otherFormatInfo = React.createElement(\"div\", {\n      className: \"otherFormatVal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, props.otherFormat);\n  }\n\n  if (props.SubTitle !== null) {\n    SubTitle = React.createElement(\"div\", {\n      className: \"formItemSubTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, props.SubInfo));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"formItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" \", props.SelectTitle, \" \"), React.createElement(\"div\", {\n    className: \"inputWrapp custom-select flex-container align-middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: props.nameSel,\n    className: \"select-selected\",\n    onClick: DropDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, List[0]), React.createElement(\"div\", {\n    className: \"select-items select-hide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, List.map((x, y) => {\n    return React.createElement(\"div\", {\n      key: y.toString(),\n      onClick: SelectDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, x);\n  })), otherFormatInfo), SubTitle));\n};\n\nexport default CustSelectBox;","map":{"version":3,"sources":["C:/xampp/htdocs/SaroFirstReact/src/Components/main/formComponent/CustomSelect/CustSelectBox.js"],"names":["React","CustSelectBox","props","List","AllSelectVal","DropDown","e","currentTarget","classList","toggle","nextSibling","SelectDiv","l","textContent","parentNode","previousElementSibling","innerHTML","handleChange","target","name","nameSel","value","SelectedNone","document","getElementById","otherFormatInfo","SubTitle","otherFormat","SubInfo","SelectTitle","map","x","y","toString"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\n\r\nconst  CustSelectBox = props =>{\r\n\r\n    const List = props.AllSelectVal;\r\n\r\n    function DropDown(e) {\r\n\r\n        e.currentTarget.classList.toggle(\"active\");\r\n        e.currentTarget.nextSibling.classList.toggle(\"select-hide\");\r\n    }\r\n\r\n\r\n    function SelectDiv(e) {\r\n        let l = e.currentTarget.textContent\r\n        e.currentTarget.parentNode.previousElementSibling.innerHTML = l ;\r\n        e.currentTarget.parentNode.previousElementSibling.classList.toggle(\"active\");\r\n        e.currentTarget.parentNode.classList.toggle(\"select-hide\");\r\n        props.handleChange({target:{name:props.nameSel,value:l}});\r\n    }\r\n\r\n    if(props.SelectedNone == 1){\r\n        document.getElementById(props.nameSel).innerHTML =  List[0];\r\n    }\r\n    let otherFormatInfo;\r\n    let SubTitle;\r\n\r\n    if(props.otherFormat !== null){\r\n        otherFormatInfo =  <div className=\"otherFormatVal\">{props.otherFormat}</div>\r\n    }\r\n\r\n    if(props.SubTitle !== null){\r\n        SubTitle =  <div className=\"formItemSubTitle\"><span>{props.SubInfo}</span></div>\r\n    }\r\n \r\n        return(\r\n            <div>\r\n                <div className=\"formItem\">\r\n                    <label> {props.SelectTitle} </label>\r\n                    <div className=\"inputWrapp custom-select flex-container align-middle\">\r\n                        \r\n                        <div id={props.nameSel} className = \"select-selected\" onClick={DropDown}>{List[0]}</div>\r\n                        <div className = \"select-items select-hide\">\r\n                            {List.map( (x,y) => {\r\n                                return(\r\n                                    <div  key={y.toString()} onClick={SelectDiv}> \r\n                                        {x}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        {otherFormatInfo}\r\n\r\n                    </div>\r\n                    {SubTitle}\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n\r\n    }\r\n\r\n    \r\n\r\nexport default CustSelectBox;"]},"metadata":{},"sourceType":"module"}